/****************************************************************************
* Copyright (C) 2019 Eric Mor
*
* This file is part of Spore ModCreatorKit.
*
* Spore ModAPI is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>.
****************************************************************************/
#pragma once

#include <Spore\Detouring.h>
#include <Spore\Resource\DatabasePackedFile.h>

/* Class generated by the ModAPI. You must NOT:
/*    - Create new instances of this class.
/*    - Make another class inherit this class.
/*    - Add new members to this class. You can add methods, however.
/* --------------------------------------------------------------- */
class DetouredDBPF : public Resource::DatabasePackedFile
{
public:

	// Call this static method in the DllMain function to apply the function detourings of this class.
	static long AttachDetour();

	// virtual bool Resource::DatabasePackedFile::GetFile(const ResourceKey& name, IPFRecord** ppDst, int nDesiredAccess, int nCreateDisposition, bool arg_10, DBPFItem* pDstInfo)
#pragma DisableOptimization
	static bool __fastcall DetouredGetFile_redirected( Resource::DatabasePackedFile* _This, int, const ResourceKey& name, Resource::IPFRecord** ppDst, int nDesiredAccess, int nCreateDisposition, bool arg_10, Resource::DBPFItem* pDstInfo)
	{
		return (( DetouredDBPF*)_This)->DetouredGetFile(name, ppDst, nDesiredAccess, nCreateDisposition, arg_10, pDstInfo);
	}
	typedef bool (__thiscall* GetFile_original_t)( Resource::DatabasePackedFile*, const ResourceKey& name, Resource::IPFRecord** ppDst, int nDesiredAccess, int nCreateDisposition, bool arg_10, Resource::DBPFItem* pDstInfo);
	static GetFile_original_t GetFile_original;
	bool DetouredGetFile(const ResourceKey& name, Resource::IPFRecord** ppDst, int nDesiredAccess, int nCreateDisposition, bool arg_10, Resource::DBPFItem* pDstInfo) ;


};
